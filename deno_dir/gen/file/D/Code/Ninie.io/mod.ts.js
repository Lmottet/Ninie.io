import { Client, Intents, } from "./deps.ts";
import { Repository } from "./src/repository.ts";
window.Repository = new Repository();
export const botCache = {
    commands: new Map(),
    commandAliases: new Map(),
    guildPrefixes: new Map(),
    inhibitors: new Map(),
    eventHandlers: {},
    arguments: new Map(),
};
const importDirectory = async (path) => {
    const files = Deno.readDirSync(Deno.realPathSync(path));
    for (const file of files) {
        if (!file.name)
            continue;
        const currentPath = `${path}/${file.name}`;
        if (file.isFile) {
            await import(currentPath);
            continue;
        }
        importDirectory(currentPath);
    }
};
await Promise.all([
    "./src/commands",
    "./src/inhibitors",
    "./src/events",
    "./src/arguments",
].map((path) => importDirectory(path)));
const readPort = () => {
    let port = Deno.env.get("PORT");
    return port ? Number.parseInt(port) : 8000;
};
const port = readPort();
const discord_token_id = "NzQwNTkwMDg5MTAwMzI5MDYw.XyrORA.SguJDWp0XwKrXQrXXLcSVRlHvFc";
const intents = [
    Intents.GUILD_PRESENCES,
    Intents.GUILD_MESSAGES,
    Intents.GUILDS,
];
Client({
    token: discord_token_id ? discord_token_id : "",
    intents: intents,
    eventHandlers: botCache.eventHandlers,
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDTCxNQUFNLEVBR04sT0FBTyxHQUdSLE1BQU0sV0FBVyxDQUFDO0FBRW5CLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQVNqRCxNQUFNLENBQUMsVUFBVSxHQUFHLElBQUksVUFBVSxFQUFFLENBQUM7QUFFckMsTUFBTSxDQUFDLE1BQU0sUUFBUSxHQUFHO0lBQ3RCLFFBQVEsRUFBRSxJQUFJLEdBQUcsRUFBbUI7SUFDcEMsY0FBYyxFQUFFLElBQUksR0FBRyxFQUFrQjtJQUN6QyxhQUFhLEVBQUUsSUFBSSxHQUFHLEVBQWtCO0lBQ3hDLFVBQVUsRUFBRSxJQUFJLEdBQUcsRUFHaEI7SUFDSCxhQUFhLEVBQUUsRUFBbUI7SUFDbEMsU0FBUyxFQUFFLElBQUksR0FBRyxFQUFvQjtDQUN2QyxDQUFDO0FBRUYsTUFBTSxlQUFlLEdBQUcsS0FBSyxFQUFFLElBQVksRUFBRSxFQUFFO0lBQzdDLE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBRXhELEtBQUssTUFBTSxJQUFJLElBQUksS0FBSyxFQUFFO1FBQ3hCLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSTtZQUFFLFNBQVM7UUFFekIsTUFBTSxXQUFXLEdBQUcsR0FBRyxJQUFJLElBQUksSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO1FBQzNDLElBQUksSUFBSSxDQUFDLE1BQU0sRUFBRTtZQUNmLE1BQU0sTUFBTSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1lBQzFCLFNBQVM7U0FDVjtRQUVELGVBQWUsQ0FBQyxXQUFXLENBQUMsQ0FBQztLQUM5QjtBQUNILENBQUMsQ0FBQztBQUdGLE1BQU0sT0FBTyxDQUFDLEdBQUcsQ0FDZjtJQUNFLGdCQUFnQjtJQUNoQixrQkFBa0I7SUFDbEIsY0FBYztJQUNkLGlCQUFpQjtDQUNsQixDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQ3ZDLENBQUM7QUFtQkYsTUFBTSxRQUFRLEdBQUcsR0FBRyxFQUFFO0lBQ3BCLElBQUksSUFBSSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ2hDLE9BQU8sSUFBSSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7QUFDN0MsQ0FBQyxDQUFDO0FBRUYsTUFBTSxJQUFJLEdBQUcsUUFBUSxFQUFFLENBQUM7QUFDeEIsTUFBTSxnQkFBZ0IsR0FBRSw2REFBNkQsQ0FBQztBQUd0RixNQUFNLE9BQU8sR0FBRztJQUNkLE9BQU8sQ0FBQyxlQUFlO0lBQ3ZCLE9BQU8sQ0FBQyxjQUFjO0lBQ3RCLE9BQU8sQ0FBQyxNQUFNO0NBQ2YsQ0FBQztBQUVGLE1BQU0sQ0FBQztJQUNMLEtBQUssRUFBRSxnQkFBZ0IsQ0FBQyxDQUFDLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDLEVBQUU7SUFFL0MsT0FBTyxFQUFFLE9BQU87SUFFaEIsYUFBYSxFQUFFLFFBQVEsQ0FBQyxhQUFhO0NBQ3RDLENBQUMsQ0FBQyJ9